@charset "UTF-8";
body {
  margin: 0;
}

div {
  box-sizing: border-box;
}

ul {
  list-style: none;
  padding-left: 0;
  margin: 0;
}

p {
  margin: 0;
}

.f-w-600 {
  font-weight: 600;
}

.border-radius-5, .soft-rotate-box {
  border-radius: 5px;
}

.display-f {
  display: flex;
}

.flex-baby {
  align-items: center;
  justify-content: center;
}

.m-b-20 {
  margin-bottom: 20px;
}

.my-m-t-60 {
  margin-top: 60px;
}

.my-m-b-60 {
  margin-bottom: 60px;
}

/* background-And-Border-style */
.bg-s-b {
  background: #D9EDF6;
  border: 1px solid #b0d9ec;
}

.bg-s-g {
  background: #DFEFD7;
  border: 1px solid #c2e0b3;
}

.bg-s-y {
  background: #FCF7E2;
  border: 1px solid #f7eab4;
}

.padding-2, .soft-rotate-box, .my-col-3, .my-col-4, .my-col-6, .my-row, .select-list li, .select-list {
  padding: 20px;
}

.active, .select-list li:hover {
  background: skyblue;
  color: #fff;
}

.border-none, .select-list li:first-child,
.select-list li:nth-child(2) {
  border-bottom: none;
}

.box, .blue-box, .green-box, .yellow-box, .red-box {
  height: 200px;
}

.third-banner-title {
  color: #2a4c6e;
}

.third-banner-content {
  background: #333333;
  color: #fff;
  font-size: 24px;
}

.red-box {
  font-size: 16px;
  padding: 10px;
  color: #fff;
  background: red;
}

.yellow-box {
  background: yellow;
}

.green-box {
  background: green;
}

.blue-box {
  font-size: 16px;
  padding: 10px;
  color: #fff;
  background: skyblue;
}

.select-container {
  width: 100%;
  padding-left: 1rem;
  padding-right: 1rem;
  margin-right: auto;
  margin-left: auto;
  margin-top: 60px;
  margin-bottom: 60px;
}

.select-list li {
  border: 1px solid #eee;
  font-size: 24px;
}

.alert-container {
  width: 100%;
  padding-left: 1rem;
  padding-right: 1rem;
  margin-right: auto;
  margin-left: auto;
  margin-top: 60px;
  margin-bottom: 60px;
}

.my-container {
  width: 100%;
  padding-left: 1rem;
  padding-right: 1rem;
  margin-right: auto;
  margin-left: auto;
  margin-top: 60px;
  margin-bottom: 60px;
}

.my-row {
  display: flex;
  flex-direction: row;
}

.my-col-6 {
  width: 50%;
  border: 1px solid #d5d5d5;
}

.my-col-4 {
  width: 33.33%;
  border: 1px solid #d5d5d5;
}

.my-col-3 {
  width: 25%;
  border: 1px solid #d5d5d5;
}

/* 8강 애니메이션 수업 숙제 관련 스타일 */
.soft-rotate-box {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  background: skyblue;
  color: #fff;
}

.soft-rotate-box:hover {
  cursor: pointer;
  animation-name: 흔들흔들애니메이션;
  animation-duration: 0.5s;
  animation-iteration-count: infinite;
}

@keyframes 흔들흔들애니메이션 {
  0% {
    transform: rotate(10deg);
  }
  50% {
    transform: rotate(-10deg);
  }
  75% {
    transform: rotate(10deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
/*
2. 마우스를 올리면 회전하는 + 기호 만들기

분석해보면 (1) 좌측 회전 (2) 우측 회전 + 약간 커지기 순으로 동작합니다.
*/
.plus-soft-rotate-box:hover {
  cursor: pointer;
  animation-name: 플러스버튼애니메이션;
  animation-duration: 0.5s;
  animation-fill-mode: forwards; /* 애니메이션이 끝난 후에도 마지막 키프레임의 상태를 유지합니다 */
  animation-timing-function: linear;
}

@keyframes 플러스버튼애니메이션 {
  0% {
    transform: rotate(0deg);
  }
  30% {
    transform: rotate(-40deg);
    transform: skew(-15deg, -15deg);
  }
  100% {
    transform: rotate(45deg) scale(2);
  }
}
/*
- 마우스 올리면 검은 메뉴 우측 이동
- 마우스 올리면 우측에 있던 Menu 글자는 가운데로
- 마우스 올리면 Item 글자는 (1) 우측 이동 (2) 살짝 비틀기 (3) 좌측이동
(팁1) 살짝 비트는건 transform : skew() 입니다.
(팁2) 항상 @keyframes 쓸 이유는 없고 어쩔 땐 transition 만으로도 가능합니다. 
*/
.shake-container {
  position: absolute;
  width: 400px;
  height: 500px;
  background: #000;
  top: 0;
  left: -200px;
  z-index: 2;
  transition: transform 1s cubic-bezier(0.5, 0, 0, 0.99);
  color: #fff;
}
.shake-container h4 {
  position: absolute;
  top: 50px;
  right: 80px;
  transition: transform 1s cubic-bezier(0.5, 0, 0, 0.99);
}
.shake-container p {
  position: absolute;
  top: 100px;
  left: 0;
  font-size: 24px;
}

.shake-container:hover {
  transform: translateX(200px);
}
.shake-container:hover h4 {
  transform: translateX(-100px);
}
.shake-container:hover p {
  animation-name: item-text-animation;
  animation-duration: 0.6s;
  animation-fill-mode: forwards;
  animation-timing-function: linear;
}

@keyframes item-text-animation {
  0% {
    transform: translateX(0px);
  }
  50% {
    transform: translateX(280px) skew(-50deg);
  }
  100% {
    transform: translateX(160px) skew(0, 0);
  }
}/*# sourceMappingURL=test.css.map */